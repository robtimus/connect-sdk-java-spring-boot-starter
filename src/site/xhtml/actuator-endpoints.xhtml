<html>
<head>
  <title>Actuator endpoints</title>
</head>
<body>
<div class="section">
  <h2>Actuator endpoints</h2>
  <p>The following custom actuator endpoints are provided. These are disabled by default for both JMX and web.
     To enable these you need to set property <tt>management.endpoint.&lt;id&gt;.enabled</tt> to <tt>true</tt>.</p>
  <p>By default all endpoints are exposed over JMX, but only the <tt>info</tt> and <tt>health</tt> endpoints are exposed over HTTP.
     To expose these custom endpoints over HTTP as well you need to set property <tt>management.endpoints.web.exposure.include</tt> with all endpoints you want enabled.
     See <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html#production-ready-endpoints-exposing-endpoints">Exposing Endpoints</a> for more information.</p>

  <h3>Logging</h3>
  <p>ID: <tt>connectSdkLogging</tt></p>
  <p>This actuator endpoint allows you to <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/logging/LoggingCapable.html">enable and disable logging</a> during runtime.
     It defines the following operations:</p>

  <h4>listLoggingCapableAndLoggerBeans</h4>
  <p>Lists all available <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/logging/LoggingCapable.html">LoggingCapable</a>
     and <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/logging/CommunicatorLogger.html">CommunicatorLogger</a> beans.</p>
  <p>HTTP endpoint example:</p>
  <pre>curl -X GET http://&lt;host&gt;/actuator/connectSdkLogging</pre>

  <h4>enableLogging</h4>
  <p>Enables logging on all <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/logging/LoggingCapable.html">LoggingCapable</a> beans.</p>
  <p>By default all available <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/logging/CommunicatorLogger.html">CommunicatorLogger</a> beans will be used in a compound logger.
     By providing argument <tt>logger</tt> you can specify a single <tt>CommunicatorLogger</tt> instead.</p>
  <p>HTTP endpoint examples:</p>
  <pre>curl -X POST http://&lt;host&gt;/actuator/connectSdkLogging -H Content-Type:application/json
curl -X POST http://&lt;host&gt;/actuator/connectSdkLogging?logger=myLogger -H Content-Type:application/json
curl -X POST http://&lt;host&gt;/actuator/connectSdkLogging -H Content-Type:application/json -d '{"logger": "myLogger"}'</pre>

  <h4>enableLoggingOnBean</h4>
  <p>Enables logging on a specific <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/logging/LoggingCapable.html">LoggingCapable</a> bean.</p>
  <p>By default all available <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/logging/CommunicatorLogger.html">CommunicatorLogger</a> beans will be used in a compound logger.
     By providing argument <tt>logger</tt> you can specify a single <tt>CommunicatorLogger</tt> instead.</p>
  <p>HTTP endpoint examples:</p>
  <pre>curl -X POST http://&lt;host&gt;/actuator/connectSdkLogging/myBean -H Content-Type:application/json
curl -X POST http://&lt;host&gt;/actuator/connectSdkLogging/myBean?logger=myLogger -H Content-Type:application/json
curl -X POST http://&lt;host&gt;/actuator/connectSdkLogging/myBean -H Content-Type:application/json -d '{"logger": "myLogger"}'</pre>

  <h4>disableLogging</h4>
  <p>Disables logging on all <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/logging/LoggingCapable.html">LoggingCapable</a> beans.</p>
  <p>HTTP endpoint example:</p>
  <pre>curl -X DELETE http://&lt;host&gt;/actuator/connectSdkLogging</pre>

  <h4>disableLoggingOnBean</h4>
  <p>Disables logging on a specific <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/logging/LoggingCapable.html">LoggingCapable</a> bean.</p>
  <p>HTTP endpoint example:</p>
  <pre>curl -X DELETE http://&lt;host&gt;/actuator/connectSdkLogging/myBean</pre>

  <hr />

  <h3>Connections</h3>
  <p>ID: <tt>connectSdkConnections</tt></p>
  <p>This actuator endpoint allows you to call <tt>closeIdleConnections</tt> and <tt>closeExpiredConnections</tt> on beans of types
     <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/PooledConnection.html">PooledConnection</a>,
     <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/Communicator.html">Communicator</a> and
     <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/Client.html">Client</a>.
     It defines the following operations:</p>

  <h4>listCloseableBeans</h4>
  <p>Lists all available <tt>PooledConnection</tt>, <tt>Communicator</tt> and <tt>Client</tt> beans.</p>
  <p>HTTP endpoint example:</p>
  <pre>curl -X GET http://&lt;host&gt;/actuator/connectSdkConnections</pre>

  <h4>closeConnections</h4>
  <p>Closes connections for all available
     <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/PooledConnection.html">PooledConnection</a>,
     <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/Communicator.html">Communicator</a> and
     <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/Client.html">Client</a> beans.</p>
  <p>Argument <tt>idleTime</tt> is optional, and defaults to the value of the <tt>connect.api.close-idle-connections.idle-time</tt> <a href="properties.html">property</a>.
     It can be specified <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config.typesafe-configuration-properties.conversion.durations">as a duration in the Spring Boot supported format</a>.</p>
  <p>Argument <tt>state</tt> can be <tt>idle</tt> to close only idle connections, <tt>expired</tt> to close only expired connections, or omitted to close both idle and expired connections.</p>
  <p>HTTP endpoint examples:</p>
  <pre>curl -X DELETE http://&lt;host&gt;/actuator/connectSdkConnections
curl -X DELETE http://&lt;host&gt;/actuator/connectSdkConnections?idleTime=10000
curl -X DELETE http://&lt;host&gt;/actuator/connectSdkConnections?idleTime=10s
curl -X DELETE 'http://&lt;host&gt;/actuator/connectSdkConnections?state=idle&amp;idleTime=10000'
curl -X DELETE http://&lt;host&gt;/actuator/connectSdkConnections?state=expired</pre>

  <h4>closeConnectionsForBean</h4>
  <p>Closes connections for a specific
     <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/PooledConnection.html">PooledConnection</a>,
     <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/Communicator.html">Communicator</a> or
     <a href="https://ingenico-epayments.github.io/connect-sdk-java/apidocs/latest/com/ingenico/connect/gateway/sdk/java/Client.html">Client</a> bean.</p>
  <p>Argument <tt>idleTime</tt> is optional, and defaults to the value of the <tt>connect.api.close-idle-connections.idle-time</tt> <a href="properties.html">property</a>.
     It can be specified <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config.typesafe-configuration-properties.conversion.durations">as a duration in the Spring Boot supported format</a>.</p>
  <p>Argument <tt>state</tt> can be <tt>idle</tt> to close only idle connections, <tt>expired</tt> to close only expired connections, or omitted to close both idle and expired connections.</p>
  <p>HTTP endpoint examples:</p>
  <pre>curl -X DELETE http://&lt;host&gt;/actuator/connectSdkConnections/myBean
curl -X DELETE http://&lt;host&gt;/actuator/connectSdkConnections/myBean?idleTime=10000
curl -X DELETE http://&lt;host&gt;/actuator/connectSdkConnections/myBean?idleTime=10s
curl -X DELETE 'http://&lt;host&gt;/actuator/connectSdkConnections/myBean?state=idle&amp;idleTime=10000'
curl -X DELETE http://&lt;host&gt;/actuator/connectSdkConnections/myBean?state=expired</pre>

  <hr />

  <h3>Authentication</h3>
  <p>ID: <tt>connectSdkApiKey</tt></p>
  <p>This actuator endpoint allows you to manage the API key of the <a href="auto-configuration.html#authenticator">auto-configured Authenticator</a> during runtime;
     not available when a custom <tt>Authenticator</tt> is provided. It defines the following operations:</p>

  <h4>setApiKey</h4>
  <p>Changes the API key id, secret API key and authorization type (defaults to <tt>V1HMAC</tt>) of the auto-configured <tt>Authenticator</tt>.</p>
  <p>HTTP endpoint example:</p>
  <pre>curl -X POST http://&lt;host&gt;/actuator/connectSdkApiKey -H Content-Type:application/json -d '{"apiKeyId": "myApiKeyId", "secretApiKey": "mySecretKeyId"}'
curl -X POST http://&lt;host&gt;/actuator/connectSdkApiKey -H Content-Type:application/json -d '{"apiKeyId": "myApiKeyId", "secretApiKey": "mySecretKeyId", "authorizationType": "V1HMAC"}'</pre>
</div>
</body>
</html>
