<html>
<head>
  <title>Auto-Configuration</title>
</head>
<body>
<div class="section">
  <h2>Auto-Configuration</h2>
  <p>The following are beans that can be auto-configured. Some of these beans will always be auto-configured if no bean of the same type is provided,
     others are available when one or more properties are set, others if one or more other beans are available.</p>
  <p>Although it is possible to auto-configure all of these beans, each of them can be replaced by an application-provided bean.
     This allows you to provide only those beans that you want, and have this Spring Boot starter auto-configure the rest.</p>

  <h3><a href="https://worldline-global-collect.github.io/connect-sdk-java/apidocs/latest/com/worldline/connect/sdk/java/json/Marshaller.html">Marshaller</a></h3>
  <p>Conditions: none.</p>

  <h3><a href="https://worldline-global-collect.github.io/connect-sdk-java/apidocs/latest/com/worldline/connect/sdk/java/authentication/Authenticator.html">Authenticator</a></h3>
  <p>Conditions:</p>
  <ul>
    <li>Properties <code>connect.api.authorization-id</code> and <code>connect.api.authorization-secret</code> are set.</li>
  </ul>
  <p>This <code>Authenticator</code> can be further auto-configured with the authorization type.</p>

  <h3><a href="https://worldline-global-collect.github.io/connect-sdk-java/apidocs/latest/com/worldline/connect/sdk/java/communication/PooledConnection.html">PooledConnection</a></h3>
  <p>Conditions: none.</p>
  <p>This <code>PooledConnection</code> can be further auto-configured with timeouts, the max connection count, HTTPS protocols and a proxy.</p>
  <h4>Connection management</h4>
  <p>If a <code>PooledConnection</code> is auto-configured, this Spring Boot starter will also auto-configure connection management.
     This will take care of closing idle (and expired) connections, and can be configured using properties <code>connect.api.close-idle-connections.idle-time</code> and <code>connect.api.close-idle-connections.interval</code>,
     or disabled by setting property <code>connect.api.close-idle-connections.enabled</code> to <code>false</code>.</p>
  <h4>Obfuscation</h4>
  <p>If a <code>PooledConnection</code> is auto-configured,
     any unique bean of type <a href="https://worldline-global-collect.github.io/connect-sdk-java/apidocs/latest/com/worldline/connect/sdk/java/logging/BodyObfuscator.html">BodyObfuscator</a>
     or <a href="https://worldline-global-collect.github.io/connect-sdk-java/apidocs/latest/com/worldline/connect/sdk/java/logging/HeaderObfuscator.html">HeaderObfuscator</a>
     will be automatically set on the connection.</p>

  <h3><a href="https://worldline-global-collect.github.io/connect-sdk-java/apidocs/latest/com/worldline/connect/sdk/java/communication/MetadataProvider.html">MetadataProvider</a></h3>
  <p>Conditions:</p>
  <ul>
    <li>Property <code>connect.api.integrator</code> is set.</li>
  </ul>
  <p>This <code>MetadataProvider</code> can be further auto-configured with the shopping cart extension.</p>
  <p>In addition, the <code>MetadataProvider</code> can be further configured by providing beans of type <a href="apidocs/com/github/robtimus/connect/sdk/java/springboot/autoconfigure/MetadataProviderBuilderCustomizer.html">MetadataProviderBuilderCustomizer</a>.
     This allows you to provide additional headers.</p>

  <h3><a href="https://worldline-global-collect.github.io/connect-sdk-java/apidocs/latest/com/worldline/connect/sdk/java/Communicator.html">Communicator</a></h3>
  <p>Conditions:</p>
  <ul>
    <li>Property <code>connect.api.endpoint.host</code> is set.</li>
    <li>Beans of type <code>Connection</code>, <code>Authenticator</code>, <code>MetadataProvider</code> and <code>Marshaller</code> are available.</li>
  </ul>
  <p>The <code>Communicator</code>'s endpoint can be further auto-configured with the scheme and port. These default to <code>https</code> and <code>-1</code>.</p>

  <h3><a href="https://worldline-global-collect.github.io/connect-sdk-java/apidocs/latest/com/worldline/connect/sdk/java/Client.html">Client</a></h3>
  <p>Conditions:</p>
  <ul>
    <li>A bean of type <code>Communicator</code> is available.</li>
  </ul>

  <h3><a href="https://worldline-global-collect.github.io/connect-sdk-java/apidocs/latest/com/worldline/connect/sdk/java/v1/V1Client.html">V1Client</a></h3>
  <p>Conditions:</p>
  <ul>
    <li>A bean of type <code>Client</code> is available.</li>
  </ul>

  <h3><a href="https://worldline-global-collect.github.io/connect-sdk-java/apidocs/latest/com/worldline/connect/sdk/java/v1/merchant/MerchantClient.html">MerchantClient</a></h3>
  <p>Conditions:</p>
  <ul>
    <li>Property <code>connect.api.merchant-id</code> is set.</li>
    <li>A bean of type <code>V1Client</code> is available.</li>
  </ul>

  <h3><a href="https://worldline-global-collect.github.io/connect-sdk-java/apidocs/latest/com/worldline/connect/sdk/java/logging/CommunicatorLogger.html">CommunicatorLogger</a></h3>
  <p>Conditions:</p>
  <ul>
    <li>Logback is the configured logging system.</li>
  </ul>
  <p>This <code>CommunicatorLogger</code> can be further auto-configured with the logger name, log level and error log level.</p>

  <h3><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html#production-ready-health">Health indicator</a></h3>
  <p>Conditions:</p>
  <ul>
    <li>Your project includes the <code>org.springframework.boot:spring-boot-starter-actuator</code> dependency.</li>
    <li>A bean of type <code>MerchantClient</code> is available.</li>
  </ul>
  <p>This health indicator will use the <a href="https://apireference.connect.worldline-solutions.com/s2sapi/v1/en_US/java/services/testconnection.html?paymentPlatform=ALL">test connection</a> functionality to check your connectivity to the Worldline Connect Server API.
     To prevent too many requests to the Worldline Connect Server API this is throttled to at most 1 request every minute. This can be changed by setting property <code>connect.api.health.min-interval</code> to the desired number of seconds between calls.</p>
  <p>If you want to have a bean of type <code>MerchantClient</code> (auto-configured or not) but you don't want this auto-configured health indicator,
     you can disable it by setting property <code>management.health.connect-sdk.enabled</code> to <code>false</code>.</p>
</div>
</body>
</html>
